server:
  port: 6603

#spring:
#  cloud:
#    config: # 配置中心
#      name: third-part-server
#      profile: ${config.name:dev}
      #label: master
#      uri: http://127.0.0.1:${config.port:8888}


spring:
  profile: dev #开发环境
  profiles:
    active: dev #使用开发环境
  application:
    name: third-part-server
  # 关闭热部署
  devtools:
    restart:
      enabled: false
  # redis集群配置
  redis:
    cluster:
      #各Redis 节点信息
      nodes: 192.168.100.31:7000,192.168.100.31:7001,192.168.100.31:7002,192.168.100.31:7003,192.168.100.31:7004,192.168.100.31:7005
      #执行命令超时时间
      command-timeout: 15000
      #重试次数
      max-attempts: 5
      #跨集群执行命令时要遵循的最大重定向数量
      max-redirects: 3
      #连接池最大连接数（使用负值表示没有限制）
      max-active: 16
      #连接池最大阻塞等待时间（使用负值表示没有限制）
      max-wait: -1
      #连接池中的最大空闲连接
      max-idle: 8
      #连接池中的最小空闲连接
      min-idle: 0
      #是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个
      test-on-borrow: true
#email邮件配置
  mail:
    #邮箱服务器地址
    host: smtp.qq.com
    port: 465
    #用户名
    username: 2016402773@qq.com
    #密码（改成自己的密码）
    password: aizbiaylzqgpbafg
    default-encoding: UTF-8
    properties:
      mail:
        smtp:
          ssl:
            enable:
              true

db:
  driverClassName: com.mysql.jdbc.Driver
  filters: stat
  initialSize: 1
  logAbandoned: true
  master:
      password: root
      url: jdbc:mysql://192.168.100.31:3308/jmall_core?useUnicode=true&characterEncoding=utf8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true
      username: root
  maxActive: 10
  maxOpenPreparedStatements: 20
  maxWait: 60000
  minEvictableIdleTimeMillis: 300000
  minIdle: 1
  removeAbandoned: true
  removeAbandonedTimeout: 1800
  slave1:
      password: root
      url: jdbc:mysql://192.168.100.31:3309/jmall_core?useUnicode=true&characterEncoding=utf8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&useSSL=true
      username: root
  slave2:
      password: root
      url: jdbc:mysql://192.168.100.31:3309/jmall_core?useUnicode=true&characterEncoding=utf8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&useSSL=true
      username: root
  testOnBorrow: true
  testOnReturn: true
  testWhileIdle: true
  timeBetweenEvictionRunsMillis: 60000
  validationQuery: SELECT 'x'

#mybatis
mybatis-plus:
  mapper-locations: classpath:mapper/third/*.xml
  #mapper-locations: com/jinyafu/jmall/mapper/core/mapper
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.jinyafu.jmall.entity.third
  #typeEnumsPackage: om.jinyafu.common.entity.enums
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 3
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    #驼峰下划线转换
    db-column-underline: true
    #mp2.3+ 全局表前缀 mp_
    #table-prefix: mp_
    #刷新mapper 调试神器
    #refresh-mapper: true
    #数据库大写下划线转换
    #capital-mode: true
    # Sequence序列接口实现类配置
    key-generator: com.baomidou.mybatisplus.incrementer.OracleKeyGenerator
    #逻辑删除配置（下面3个配置）
    logic-delete-value: 1
    logic-not-delete-value: 0
    #sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
    #自定义填充策略接口实现
    #meta-object-handler: com.baomidou.springboot.MyMetaObjectHandler
  configuration:
    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）
    map-underscore-to-camel-case: true
    cache-enabled: false
    #配置JdbcTypeForNull, oracle数据库必须配置
    jdbc-type-for-null: 'null'

#超时配置
ribbon:
  ReadTimeout: 60000
  ConnectTimeout: 60000
  #对当前实例的重试次数
  MaxAutoRetries: 1
  #切换实例的重试次数
  MaxAutoRetriesNextServer: 1
  OkToRetryOnAllOperations: true # 是否对所有请求都进行重试
  eureka:
    enabled: true

hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          strategy: SEMAPHORE
          thread:
            # 网关中路由转发请求的HystrixCommand超时时间，hystrix超时时间的计算： (ribbonReadTimeout + ribbonConnectTimeout) * (maxAutoRetries + 1) * (maxAutoRetriesNextServer + 1)
            timeoutInMilliseconds: 50000
  #上下文共享
  shareSecurityContext: true

eureka:
  client:
    #register-with-eureka: false
    #fetch-registry: false
    serviceUrl:
      defaultZone: http://localhost:8099/eureka/
    #healthcheck:
      #enabled: true
  instance:
    # 使用IP注册
    #prefer-ip-address: true
    #instance-id: ${spring.cloud.client.ip-address}:${server.port}
    statusPageUrl: https://${eureka.hostname}:${server.port}/info
    healthCheckUrl: https://${eureka.hostname}:${server.port}/health
    homePageUrl: https://${eureka.hostname}:${server.port}/

#日志配置
logging:
  config: classpath:logback-spring.xml